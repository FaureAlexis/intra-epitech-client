name: Intra Epitech Client CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  pages: write
  id-token: write

jobs:
  check_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: '16.x'
      - name: Install dependencies 
        run: npm install
      - name: Run Linter
        run: npm run lint

  check_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies 
        run: npm install
      - name: Run tests & get code coverage
        run: npm test
        env:
          CI: true
          EPITECH_COOKIE: ${{ secrets.EPITECH_COOKIE }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  deploy:
    runs-on: ubuntu-latest
    needs: [check_lint, check_tests]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Configure git user
        run: |
          git config --global user.name "Epitech Intra Client CI"
          git config --global user.email "alexis.faure@epitech.eu"s
      - name: Install dependencies 
        run: npm install
      - name: Bump version
        run: npm version patch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: npm run build
      - name: NPM CI
        run: npm ci
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          EPITECH_COOKIE: ${{ secrets.EPITECH_COOKIE }}

  doc:
    name: Generate documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install JSDoc
        run: npm install -g jsdoc
      - name: Install dependencies
        run: npm install
      - name: Generate JSDoc
        run: jsdoc -r ./src/ README.md -c jsdoc.json
      - name: Setup Pages
        uses: actions/configure-pages@v3
        if: always()
      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v1
        with:
          path: './out'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v2
